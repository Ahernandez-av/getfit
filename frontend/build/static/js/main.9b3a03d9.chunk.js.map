{"version":3,"sources":["images/logo.svg","pages/Home.js","components/404/NotFound.js","services/index.js","hooks/context.js","components/profile/Info.js","components/profile/Update.js","components/profile/Profile.js","components/LayoutApp.js","pages/Signup.js","pages/Login.js","components/Dashboard/Feed.js","pages/Dashboard.js","pages/NewUserInfoForm.js","pages/Exercises.js","pages/Workouts.js","pages/CreateWorkout.js","pages/Recipes.js","pages/WorkoutDisplay.js","Router.js","serviceWorker.js","index.js"],"names":["module","exports","Title","Typography","Home","id","className","span","level","alt","src","NotFound","baseURL","service","axios","create","withCredentials","MY_SERVICE","test","a","get","signup","user","post","login","logOut","isAuth","updateUser","put","editInfo","userData","deleteUser","delete","updatePic","image","getExercises","getWorkouts","getWorkout","createWorkout","workoutInfo","getRecipesChicken","process","getRecipes","query","AppContext","createContext","AppCtxProvider","props","useState","setUser","useEffect","then","response","console","log","data","exercise","catch","error","getSessionData","userInfo","value","updateUserCtx","userCopy","username","profile_pic","weight","weightPrefix","height","heightPrefix","logout","addProfilePic","img","Provider","useContextInfo","useContext","Text","Info","usr","setUsr","setImage","handleUploadFile","file","FormData","append","result","imageUrl","secure_url","_id","size","xs","sm","md","lg","xl","xxl","style","textAlign","type","action","onChange","info","status","fileList","message","success","name","beforeUpload","icon","UploadOutlined","Update","Form","useForm","form","send","Object","entries","map","val","undefined","resetFields","padding","layout","onFinish","Item","label","Option","block","htmlType","Profile","closeProfile","history","useHistory","view","setView","push","width","actions","ImportOutlined","key","onClick","InfoCircleOutlined","EditOutlined","DeleteOutlined","Header","Layout","Content","Footer","LayoutApp","children","profile","setProfile","s","offset","logo","to","Signup","userInput","toast","rules","required","Password","href","Login","Paragraph","Main","setWorkouts","popular","setPopular","allWorkouts","popularWorkouts","slice","getWorkoutsFunction","elm","index","ellipsis","description","Dashboard","Select","NewUserInfoForm","userInputValues","weightPrefixSelector","initialValue","noStyle","initialvalue","heightPrefixSelector","addonBefore","Exercises","exercises","setExercises","allExercises","getData","gutter","ex","title","muscle_group","videoUrl","url","Workouts","workouts","Search","Input","CreateWorkout","searchQuery","setSearchQuery","searchResults","setSearchResults","newData","setNewData","exerciseArr","setExerciseArr","isModalVisible","setIsModalVisible","modalVideoUrl","setModalVideoUrl","term","filter","toLowerCase","includes","addExercise","item","length","showModal","round_rest","set_rest","repeat","sets","exercises_per_set","created_by","visible","onCancel","footer","primary","arr","deleteHandle","danger","event","target","placeholder","class","ghost","Recipies","recipes","setRecipes","search","setSearch","setQuery","hits","getRecipesOnce","getRecipies","e","onSearch","recipe","i","ingredientLines","ingredient","healthLabels","healthLabel","calories","toFixed","DisplayWorkout","match","listData","exercisesCounter","workoutExc","setWorkoutExc","workout","setWorkout","videos","setVideos","count","setCount","params","videosCopy","set","j","rest","copy","handleVideo","PlayCircleOutlined","Router","exact","path","component","Recipes","Boolean","window","location","hostname","ReactDOM","render","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","Slide","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b3a03d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6d2e1841.svg\";","import React from \"react\"\nimport \"./home.scss\"\nimport { Row, Col, Card, Typography } from \"antd\"\n\nconst { Title } = Typography\n\nfunction Home() {\n\n  return (\n    <div id=\"home\">\n      <Row className=\"hero\">\n        <Col span={24}>\n          <Title level={1}>\n            Best Training\n            <br/> \n            <span>For You</span>\n          </Title>\n          <p>We have Prepared The Best Exercises to keep you moving</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Title level={4}>\n            Best Training\n          </Title>\n        </Col>\n      </Row>\n      <Row className=\"card-group\">\n      <Col span={6}>\n      <Card>\n          <div>\n          <img alt=\"example\" src=\"/exercise.jpg\"/>\n          </div>\n          <div className=\"card-content\">\n            <p className=\"card-title\">Mentality Challenge</p>\n            <p className=\"card-text\">feel better emotionally and phsically with a few minuts of exercise a day</p>\n          </div>\n        </Card>\n      </Col>\n      <Col span={6}>\n        <Card>\n          <div>\n          <img alt=\"example\" src=\"/exercise.jpg\"/>\n          </div>\n          <div className=\"card-content\">\n            <p className=\"card-title\">Boost Your Mood</p>\n            <p className=\"card-text\">Feel better with a bit of exercise, just 20min a day</p>\n          </div>\n        </Card>\n      </Col>\n      <Col span={6}>\n      <Card>\n          <div>\n          <img alt=\"example\" src=\"/exercise.jpg\"/>\n          </div>\n          <div className=\"card-content\">\n            <p className=\"card-title\">For Small Spaces</p>\n            <p className=\"card-text\">No need of a gym or a big space to stay Healthy</p>\n          </div>\n        </Card>\n      </Col>\n      <Col span={6}>\n      <Card>\n          <div>\n          <img alt=\"example\" src=\"/exercise.jpg\"/>\n          </div>\n          <div className=\"card-content\">\n            <p className=\"card-title\">For The Whole Family</p>\n            <p className=\"card-text\">exercises for all the family members</p>\n          </div>\n        </Card>\n      </Col>\n    </Row>\n    <Row className=\"section promo-1\">\n      <Col span={24}>\n        <Title level={1}>\n          Get Healthy\n          <br/> \n          <span>And Start Moving</span>\n        </Title>\n        <p>We have Prepared The Best Exercises to keep you moving</p>\n      </Col>\n    </Row>\n    <Row className=\"section section-inverse promo-2\">\n      <Col span={24}>\n        <Title level={1}>\n          Get Known\n          <br/> \n          <span>And Get Notice</span>\n        </Title>\n        <p>We have Prrepared The Best Exercises to keep you moving</p>\n      </Col>\n    </Row>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  ? (baseURL = 'here should be your production endpoint')\n  : (baseURL = 'http://localhost:3000');\n\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst MY_SERVICE = {\n  test: async () => {\n    return await service.get(\"/\")\n  },\n  signup: async (user) => {\n    return await service.post(\"/signup\", user)\n  },\n  login: async (user) => {\n    return await service.post(\"/login\", user)\n  },\n  logOut: async () => {\n    return await service.get(\"/logout\")\n  },\n  isAuth: async () => {\n    return await service.get('/profile')\n  },\n  updateUser: async (id, user) => {\n    return await service.put(`user/update/${id}`, user)\n    // return await service.post(`user/update/${id}`, user)\n  },\n  editInfo: async (userData) => {\n    return await service.put(\"/user/edit-info\", userData)\n    // return await service.post(\"/user/edit-info\", userData)\n  },\n  deleteUser: async (id) => {\n    return await service.delete(`user/delete/${id}`)\n    // return await service.post(`user/delete/${id}`)\n  },\n  updatePic: async (id, image) => {\n    return await service.put(`user/update-pic/${id}`, image)\n    // return await service.post(`user/update-pic/${id}`, image)\n  },\n  getExercises: async () => {\n    return await service.get(\"/api/getExercises\")\n  },\n  getWorkouts: async () => {\n    return await service.get(\"/api/getWorkouts\")\n  },\n  getWorkout: async (id) => {\n    return await service.get(`/api/workouts/${id}`)\n  },\n  createWorkout: async (workoutInfo) => {\n    return await service.post('user/create-workout', workoutInfo)\n  },\n  getRecipesChicken: async () => {\n    return await service.get(`https://api.edamam.com/search?q=chicken&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}`)\n  },\n  getRecipes: async (query) => {\n    return await service.get(`https://api.edamam.com/search?q=${query}&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}`)\n  }\n};\n\nexport default MY_SERVICE;\n","import React, { useState, createContext, useContext, useEffect } from \"react\"\n\nimport MY_SERVICE from \"../services\"\n\nexport const AppContext = createContext()\n\nexport const AppCtxProvider = (props) => {\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    async function getSessionData() {\n      MY_SERVICE.isAuth()\n      .then(response=> {\n        console.log(\"anser from isAuth: \", response.data.user)\n      if (response.data.user.exercise !== \"\") {\n        console.log(response.data.user)\n        login(response.data.user)\n      }\n      }).catch(error=>{\n      })\n    }\n    getSessionData()\n  }, [])\n\n  const login = (userInfo) => {\n    setUser(userInfo)\n  }\n  \n  const logout = () => {\n    setUser(null)\n  }\n\n  const addProfilePic = (img) => {\n    const userCopy = { ...user }\n    userCopy.profile_pic = img\n    setUser(userCopy)\n  }\n\n  const updateUserCtx = (userInfo) => {\n    let userCopy = {...user}\n\n    userCopy = {\n      username: userInfo.username,\n      user: userInfo.user,\n      exercise: userInfo.exercise,\n      profile_pic: userInfo.profile_pic,\n      weight: {\n        value: userInfo.weight,\n        weightPrefix: userInfo.weightPrefix\n      },\n      height: {\n        value: userInfo.height,\n        heightPrefix: userInfo.heightPrefix\n      },\n    }\n     setUser(userCopy)\n  }\n\n  const value = { user, login, updateUserCtx, logout, addProfilePic }\n\n  return <AppContext.Provider {...props} value={value} />\n}\n//hook\nexport const useContextInfo = () => useContext(AppContext)\n","import React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport { useContextInfo } from '../../hooks/context'\nimport { Avatar, Row, Col, Typography, Upload, Button, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport MY_SERVICE from '../../services'\nimport \"./Profile.scss\"\n\nconst cloudinaryAPI = process.env.REACT_APP_CLOUDINARY_ROUTE\n\nconst { Title, Text } = Typography;\n\nconst Info = () => {\n\n  const { user, addProfilePic } = useContextInfo()\n  const [usr, setUsr] = useState(user)\n  const [image, setImage] = useState(user.profile_pic)\n  console.log(user, \"🔥\")\n\n  useEffect(() => {\n    if(user){\n      setUsr(user)\n    } else {\n      setUsr(user)\n    }\n  },[user])\n\n  const handleUploadFile = async (file) => {\n    console.log(file, \"💾\");\n    let data = new FormData()\n\n    data.append('file', file)\n    data.append('upload_preset', process.env.REACT_APP_UPLOAD_PRESET)\n    \n    const result = await axios.post(cloudinaryAPI, data)\n\n    const imageUrl = result.data.secure_url\n\n    await MY_SERVICE.updatePic(usr._id, {profile_pic: imageUrl})\n\n    addProfilePic(imageUrl)\n\n    setImage(imageUrl)\n\n  }\n\n  function onChange(info) {\n    if (info.file.status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  }\n\n  return (\n    <>\n   {user ? (\n   <>\n  <div id=\"profile-info\">\n   <Row>\n        <Col span={6}>\n          <Avatar \n          src={image} \n          size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n          />\n        </Col>\n        <Col span={18} style={{textAlign: 'left'}}>\n          <Title level={4}>{usr.username}</Title>\n          <Text type=\"secondary\">{usr.exercise}</Text>\n          <Upload \n            action='//jsonplaceholder.typicode.com/posts/'\n            onChange={onChange}\n            name=\"file\"\n            beforeUpload={handleUploadFile}>\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24} className=\"info__content\">\n        <div>\n        <p>\n          Height\n        </p>\n        <p>{usr.height.value} &nbsp; {usr.height.heightPrefix}</p>\n        </div>\n        <div>\n          <p>\n            Weight\n          </p>\n          <p>\n          {usr.weight.value}  &nbsp; {usr.weight.weightPrefix}\n          </p>\n        </div>\n        </Col>\n      </Row>\n    </div>\n   </>\n   ) : \"\"}\n      {/* <Row>\n        <Col span={6}>\n          <Avatar \n          src={image} \n          size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n          />\n            <Upload \n            action='//jsonplaceholder.typicode.com/posts/'\n            onChange={onChange}\n            name=\"file\"\n            beforeUpload={handleUploadFile}>\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\n            </Upload>\n        </Col>\n        <Col span={18} style={{textAlign: 'left'}}>\n          <Title level={4}>{user.username}</Title>\n          <Text type=\"secondary\">{user.exercise}</Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <p>{user.height.value} &nbsp; {user.height.heightPrefix}</p>\n          <p>{user.weight.value}  &nbsp; {user.weight.weightPrefix}</p>\n        </Col>\n      </Row> */}\n    </>\n  )\n}\n\nexport default Info","import React from 'react'\nimport { useContextInfo } from '../../hooks/context'\nimport MY_SERVICE from '../../services'\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Select,\n  message\n} from 'antd'\n\nfunction Update() {\n\n  const { user, updateUserCtx } = useContextInfo()\n  console.log(user)\n  const [form] = Form.useForm()\n\n  async function submitForm(data) {\n    // TODO: Enviar el proyecto al backend... mediante nuestro servicio y..... Redirigir al inicio.\n    let send = true\n    Object.entries(data).map(val => {\n      if (val[1] === undefined) {\n        message.error(`Campo ${val[0]} vacio`)\n        send = false\n      }\n    })\n    if (send) {\n      await MY_SERVICE.updateUser(user._id, data)\n      form.resetFields()\n      updateUserCtx(data)\n    }\n  }\n\n  return (\n    <div style={{ padding: '1rem 3rem' }}>\n      <Row>\n        <div>\n          Update Profiel\n        </div>\n        <Col span={24}>\n          <Form form={form} layout=\"vertical\" onFinish={submitForm}>\n            <Form.Item name=\"username\" label=\"Username:\">\n              <Input />\n            </Form.Item>\n\n            <Form.Item name=\"email\" label=\"Email:\">\n              <Input />\n            </Form.Item>\n            \n            <Form.Item name=\"exercise\" label=\"Exercise:\">\n              <Select>\n                <Select.Option value=\"Begginer\">\n                  Begginer\n                </Select.Option>\n                <Select.Option value=\"Intermediate\">\n                  Intermediate\n                </Select.Option>\n                <Select.Option value=\"Advanced\">\n                  Adavnced\n                </Select.Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"height\" label=\"Height:\">\n              <Input />\n            </Form.Item>\n\n            <Form.Item name=\"weight\" label=\"Weight:\">\n              <Input />\n            </Form.Item>\n\n            <Button type=\"primary\" block htmlType=\"submit\">\n              Update Profile\n            </Button>\n\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Update","import React, { useState } from 'react'\nimport { Card, Row, Col } from 'antd';\nimport { EditOutlined, DeleteOutlined, ImportOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport Info from './Info'\nimport Update from './Update'\nimport { useContextInfo } from '../../hooks/context'\nimport MY_SERVICE from '../../services'\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ( {closeProfile} ) => {\n  const history = useHistory();\n  const { user, logout } = useContextInfo()\n  const [view, setView] = useState(\"info\")\n\n  function handleInfo() {\n    setView('info')\n  }\n\n  function handleUpdate() {\n    setView('update')\n  }\n\n  async function handleLogout() {\n    await MY_SERVICE.logOut()\n    closeProfile()\n    logout()\n    history.push(\"/\");\n  }\n\n  async function handleDelete() {\n    await MY_SERVICE.deleteUser(user._id)\n    closeProfile()\n    logout()\n  }\n\n  return (\n    <>\n    {user && \n    <Row id=\"profile-card\">\n      <Col style={{width: \"100%\"}}>\n        <Card\n          actions={[\n            <ImportOutlined key=\"signout\" onClick={handleLogout}/>,\n            <InfoCircleOutlined key=\"info\" onClick={handleInfo}/>,\n            <EditOutlined key=\"edit\" onClick={handleUpdate}/>,\n            <DeleteOutlined key=\"delete\" onClick={handleDelete}/>\n          ]}\n        >\n        {view === \"info\" ? \n          <Info />\n        : \n          <Update />\n        }\n        </Card>\n      </Col>\n    </Row>}\n  </>\n  )\n}\n\nexport default Profile","import { Layout, Row, Col, Button, Avatar } from \"antd\"\nimport React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useContextInfo } from \"../hooks/context\"\nimport logo from \"../images/logo.svg\"\nimport Profile from \"../components/profile/Profile\"\n\nconst { Header, Content, Footer } = Layout\n\nexport default function LayoutApp({ children }) {\n  const { user } = useContextInfo()\n  const [image, setImage] = useState()\n  const [profile, setProfile] = useState(false)\n\n  useEffect(() => {\n    if (user) {\n      setImage(user.profile_pic)\n    } else {\n      setImage(\"\")\n    }\n  },[user])\n\n  function handleProfile() {\n    if (profile) {\n      setProfile(false)\n    } else {\n      setProfile(true)\n    }\n  }\n\n  function closeProfile() {\n    setProfile(false)\n  }\n\n  return (\n    <div id=\"custom\">\n      <Layout className=\"layout\">\n        <Row>\n          <Col\n            className=\"custom-container\"\n            xs={{ span: 24 }}\n            s={{ span: 22, offset: 1 }}\n            lg={{ span: 22, offset: 1 }}\n          >\n            <Header>\n              <div className=\"layout__container\">\n                <div>\n                  <div className=\"layout__image\">\n                    {!user ? (\n                      <Link to=\"/\">\n                        <img src={logo} alt=\"User profile\"/>\n                      </Link>\n                    ) : (\n                      <img src={logo} alt=\"User profile\"/>\n                    )}\n                  </div>\n                </div>\n                <div className=\"layout__links\">\n                  {!user ? (\n                    <>\n                      <Link to=\"/signup\">\n                        <Button type=\"primary\">Signup</Button>\n                      </Link>\n                      <Link to=\"/login\">\n                        <Button>Login</Button>\n                      </Link>\n                    </>\n                  ) : (\n                    <>\n                      <Link to=\"/dashboard\">\n                        <Button type=\"text\">Feed</Button>\n                      </Link>\n                      <Link to=\"/workouts\">\n                        <Button type=\"text\">workouts</Button>\n                      </Link>\n                      <Link to=\"/create-workout\">\n                        <Button type=\"text\">create workout</Button>\n                      </Link>\n                      <Link to=\"/recipes\">\n                        <Button type=\"text\">meals</Button>\n                      </Link>\n\n                      <a onClick={handleProfile}>\n                        <Avatar size=\"large\" src={image} />\n                      </a>\n                    </>\n                  )}\n                </div>\n              </div>\n            </Header>\n          </Col>\n        </Row>\n        <br />\n        <Content>\n          <Row>\n            <Col\n              xs={{ span: 24 }}\n              s={{ span: 22, offset: 1 }}\n              lg={{ span: 22, offset: 1 }}\n            >\n              <div className=\"site-layout-content\">\n                {profile && <Profile closeProfile={() => closeProfile()}/>}\n                {children}\n              </div>\n            </Col>\n          </Row>\n        </Content>\n        <Footer>\n          <Row>\n            <Col\n              xs={{ span: 24 }}\n              s={{ span: 22, offset: 1 }}\n              lg={{ span: 22, offset: 1 }}\n            >\n              <div className=\"footer__container\">\n                <div className=\"footer__image\">\n                  <img src={logo} />\n                  <p>Powered by IRONHACK</p>\n                </div>\n                <div>GetFitTeam © Copyright 2020</div>\n              </div>\n            </Col>\n          </Row>\n        </Footer>\n      </Layout>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Row, Col, Form, Input, Button, Typography, Divider } from \"antd\"\nimport MY_SERVICE from \"../services\"\nimport { toast } from \"react-toastify\"\nimport { useContextInfo } from \"../hooks/context\"\nimport \"./form.scss\"\n\nconst { Title } = Typography\n\nconst googleUrl = process.env.NODE_ENV === 'development' ?\n\"http://localhost:3000/auth/google\" : '/auth/google'\n\nconst Signup = ({ history }) => {\n  const [form] = Form.useForm()\n  const { login, user } = useContextInfo()\n  if (user) history.push(\"/dashboard\")\n\n  async function handleSubmit(userInput) {\n    await MY_SERVICE.signup(userInput)\n    .then(response => {\n      MY_SERVICE.login(userInput)\n      .then(response => {\n        history.push(\"/new-user-form\")\n      }).catch(error =>{\n      })\n    }).catch(error => {\n      toast.error(\"Something went wrong! Email already exists!\")\n    })\n    \n  }\n\n  return (\n    <Row id=\"form-style\">\n      <div className=\"form__content\">\n      <Col span={24}>\n        <Title level={1}>\n        CREATE YOUR ACCOUNT\n        <br/>\n        <span>To start your journey</span>\n        </Title>\n      </Col>\n      <Col span={24}>\n        <Form layout=\"vertical\" form={form} onFinish={handleSubmit}>\n          <Form.Item rules={[{ required: true }]} name=\"email\" label=\"Email\">\n            <Input />\n          </Form.Item>\n          <Form.Item\n            rules={[{ required: true }]}\n            name=\"password\"\n            label=\"Password\"\n          >\n            <Input.Password />\n          </Form.Item>\n          <Button type=\"primary\" block htmlType=\"submit\">\n            Signup\n          </Button>\n        </Form>\n        <Divider>\n          Or\n        </Divider>\n        <a href={googleUrl}>\n          <Button block> <i className=\"fab fa-google\"></i>  &nbsp; Signup with Google </Button>\n        </a>\n      </Col>\n      </div>\n    </Row>\n  )\n}\n\nexport default Signup\n","import React from \"react\"\nimport { Row, Col, Form, Input, Button, Typography, Divider } from \"antd\"\nimport MY_SERVICE from \"../services\"\nimport { useContextInfo } from \"../hooks/context\"\nimport \"./form.scss\"\n\nconst { Title } = Typography\n\nconst googleUrl = process.env.NODE_ENV === 'development' ?\n  \"http://localhost:3000/auth/google\" : '/auth/google'\n\nconst Login = ({ history }) => {\n  \n  const { user, login } = useContextInfo()\n  if (user) history.push(\"/dashboard\")\n  const [form] = Form.useForm()\n\n  async function handleSubmit(userInput) {\n    const { data } = await MY_SERVICE.login(userInput)\n    if (data.user.exercise === \"\") {\n      history.push(\"/new-user-form\")\n    } else {\n      history.push(\"/dashboard\")\n      login(data.user)\n    }\n  }\n\n  return (\n    <Row id=\"form-style\">\n    <div className=\"form__content\">\n      <Col span={24}>\n        <Title level={1}>\n        Get in to cotinue\n        <br/>\n        <span>with your JOURNEY</span>\n        </Title>\n      </Col>\n      <Col span={24}>\n        <Form layout=\"vertical\" form={form} onFinish={handleSubmit}>\n          <Form.Item \n          rules={[{ required: true }]} \n          name=\"email\" label=\"Email\">\n            <Input />\n          </Form.Item>\n          <Form.Item\n            rules={[{ required: true }]}\n            name=\"password\"\n            label=\"Password\"\n          >\n            <Input.Password />\n          </Form.Item>\n          <Button type=\"primary\" block htmlType=\"submit\">\n            Login\n          </Button>\n        </Form>\n        <Divider/>\n        <a href={googleUrl}>\n          <Button block><i className=\"fab fa-google\"></i> &nbsp; Login with Google </Button>\n        </a>\n      </Col>\n      </div>\n    </Row>\n  )\n}\n\nexport default Login\n","import React, { useEffect, useState } from \"react\"\nimport { Row, Col, Typography, Card, Button } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport MY_SERVICE from \"../../services\"\nimport \"./Feed.scss\"\nconst { Title, Paragraph } = Typography\n\nfunction Main() {\n  const [workouts, setWorkouts] = useState(null)\n  const [popular, setPopular] = useState(null)\n\n  useEffect(() => {\n    async function getWorkoutsFunction() {\n      const { data: allWorkouts } = await MY_SERVICE.getWorkouts()\n      const popularWorkouts = allWorkouts.slice(0,3)\n      setPopular(popularWorkouts)\n      setWorkouts(allWorkouts)\n    }\n    getWorkoutsFunction()\n  }, [])\n\n  return (\n    <>\n    <div id=\"dash-feed\">\n    <Row className=\"section feed-image\">\n      <Col span={24}>\n        <Title level={1}>\n          Look For The\n          <br/> \n          <span>Latest Workouts?</span>\n        </Title>\n        <div className=\"button-container\">\n          <Link to=\"/workouts\">\n            <Button type=\"primary\">See Workouts</Button>\n          </Link>\n        </div>\n      </Col>\n    </Row>\n    <Row className=\"card-group\">\n    {popular && popular.map((elm, index)=> \n    <Col span={7} key={index}>\n    <Link to={`/workouts/${elm._id}`}>\n      <Card>\n          <div>\n          <img alt=\"example\" src=\"/exercise.jpg\"/>\n          </div>\n          <div className=\"card-content\">\n            <p className=\"card-title\">{elm.name}</p>\n            <Paragraph className=\"card-text\" ellipsis>\n              {elm.description}\n            </Paragraph>\n          </div>\n        </Card>\n      </Link>\n      </Col>)}\n      <Col span={3}>\n        <div className=\"card-group__button-container\">\n          <Link to=\"/workouts\">\n            <div>\n              <Button type=\"primary\">See All</Button>\n            </div>\n          </Link>\n        </div>\n      </Col>\n    </Row>\n    <Row className=\"section feed\">\n      <Col span={24}>\n        <Title level={1}>\n          Looking for more? \n          <br/> \n          <span>let’s do a workout</span>\n        </Title>\n        <div className=\"feed__button-container\">\n          <Link to=\"/workouts\">\n            <Button type=\"primary\">All Workouts</Button>\n          </Link>\n        </div>\n      </Col>\n    </Row>\n    </div>\n    </>\n  )\n}\n\nexport default Main\n","import React from \"react\"\nimport { useContextInfo } from \"../hooks/context\"\nimport Feed from '../components/Dashboard/Feed'\n\nconst Dashboard = () => {\n  \n  const { user } = useContextInfo()\n\n  return (\n    <>\n    {user ? (\n    <Feed></Feed>\n    ) : \"\"}\n    </>\n  )\n}\n\nexport default Dashboard\n\n","import React from \"react\"\nimport {\n  Form,\n  Button,\n  Input,\n  Col,\n  Select,\n  Row,\n  Typography,\n} from \"antd\"\nimport MY_SERVICE from \"../services\"\nimport { useContextInfo } from \"../hooks/context\"\nimport { toast } from \"react-toastify\"\nimport \"./form.scss\"\nconst { Title } = Typography\nconst { Option } = Select\n\nconst NewUserInfoForm = ({ history }) => {\n  const [form] = Form.useForm()\n  const { updateUserCtx } = useContextInfo()\n\n  async function handleSubmit(userInputValues) {\n    if (!userInputValues.weightPrefix)\n      toast.error(\"Type of unit for weight must be selected\")\n    if (!userInputValues.heightPrefix)\n      toast.error(\"Type of unit for height must be selected\")\n\n    if (userInputValues.weightPrefix && userInputValues.heightPrefix) {\n      await MY_SERVICE.editInfo(userInputValues)\n        .then((response) => {\n          history.push(\"/dashboard\")\n          toast.success(\"Welcome to GetFit\")\n          userInputValues.profile_pic = response.data.user.profile_pic\n          console.log(\"log pa ver con que estamos updateando el contexto despues de llenar el NewUSerInfoForm: \")\n          console.log(userInputValues)\n          updateUserCtx(userInputValues)\n        })\n        .catch((error) => {\n          toast.error(\"Weight and Height values must be number\")\n        })\n    }\n  }\n\n  const weightPrefixSelector = (\n    <Form.Item initialValue='kgs' name=\"weightPrefix\" noStyle>\n      <Select value='kgs'   initialvalue=\"kgs\"  style={{ width: 70 }}>\n        <Option value=\"kgs\">kgs</Option>\n        <Option value=\"lbs\">lbs</Option>\n      </Select>\n    </Form.Item>\n  )\n  const heightPrefixSelector = (\n    <Form.Item initialValue='cms' name=\"heightPrefix\" noStyle>\n      <Select initialvalue=\"cms\"  style={{ width: 70 }}>\n        <Option value=\"cms\">cms</Option>\n        <Option value=\"ins\">ins</Option>\n      </Select>\n    </Form.Item>\n  )\n\n  return (\n    <Row id=\"form-style\">\n    <div className=\"form__content\">\n      <Col span={24}>\n        <Title level={1}>\n        set your profile\n        <br/>\n        <span>and get started</span>\n        </Title>\n        <Typography.Paragraph>\n          Before we proceed. Let us know more about yourself, are you a trainer or a enthusiastic athlete\n        </Typography.Paragraph>\n      </Col>\n      <Col span={24}>\n        <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n          <Form.Item\n            rules={[{ required: true }]}\n            name=\"username\"\n            label=\"Username\"\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item rules={[{ required: true }]} name=\"weight\" label=\"Weight\">\n            <Input\n              addonBefore={weightPrefixSelector}\n              style={{ width: \"100%\" }}\n              className=\"blk-input\"\n            />\n          </Form.Item>\n\n          <Form.Item rules={[{ required: true }]} name=\"height\" label=\"Height\" className=\"blk-input\">\n            <Input\n              addonBefore={heightPrefixSelector}\n              style={{ width: \"100%\" }}\n            />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"user\"\n            label=\"Are you a regular user or a trainer who wants to create workouts?\"\n            rules={[{ required: true }]}\n          >\n            <Select>\n              <Select.Option value=\"User\">\n                I'm a regular user!\n              </Select.Option>\n              <Select.Option value=\"Trainer\">\n                I'm a trainer who can create workouts!\n              </Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            name=\"exercise\"\n            label=\"What bests describe your training history\"\n            rules={[{ required: true }]}\n          >\n            <Select>\n              <Select.Option value=\"Begginer\">\n                Not at all or been training less than 6 months\n              </Select.Option>\n              <Select.Option value=\"Intermediate\">\n                Been training less than 2 years\n              </Select.Option>\n              <Select.Option value=\"Advanced\">\n                Been training for more than 2 years\n              </Select.Option>\n            </Select>\n          </Form.Item>\n          <Button type=\"primary\" block size=\"middle\" htmlType=\"submit\">\n            Next\n          </Button>\n          <br />\n          <br />\n          <Typography.Paragraph ellipsis>\n            This form only needs to be filled once.\n          </Typography.Paragraph>\n        </Form>\n      </Col>\n      </div>\n    </Row>\n  )\n}\n\nexport default NewUserInfoForm\n","import React, { useEffect, useState } from \"react\"\nimport { Row, Col, Card, Typography, Spin } from \"antd\"\nimport ReactPlayer from \"react-player\"\nimport MY_SERVICE from \"../services\"\n\n\nfunction Exercises() {\n  const [exercises, setExercises] = useState(null)\n  useEffect(() => {\n    async function getData() {\n      const { data: allExercises } = await MY_SERVICE.getExercises()\n      setExercises(allExercises)\n    }\n    getData()\n  }, [])\n  return (\n    <>\n      <Typography.Title level={3}>GetFit</Typography.Title>\n      <Row gutter={[16, 16]}>\n        {exercises?.map((ex) => (\n          <Col xs={24} sm={24} md={12} lg={8} key={ex._id}>\n            {/* <img\n              style={{ width: \"200px\", padding: \"10px\" }}\n              src={ex.imageUrl}\n              alt=\"\"\n            /> */}\n            <Card title={ex.name}>\n              <Card\n                type=\"inner\"\n                title={ex.muscle_group}\n                // extra={<a href={ex.videoUrl}>YouTube</a>}\n              >\n               <Typography.Title level={5}>How to perform</Typography.Title>\n              {ex.videoUrl ? (<ReactPlayer \n                url={ex.videoUrl} \n                width='100%'\n                height='260px'\n                />) : \n                (<Spin/>)}\n                \n              </Card>\n              {/* <Card\n                style={{ marginTop: 16 }}\n                type=\"inner\"\n                title=\"Inner Card title\"\n                extra={<a href=\"#\">More</a>}\n              >\n                Inner Card content\n              </Card> */}\n            </Card>\n            {/* <Card>\n            <p>{ex.name}</p>\n\n            </Card> */}\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Exercises\n\n// return (\n//     <>\n//       <Typography.Title level={3}>GetFit</Typography.Title>\n//       <Row gutter={[16, 16]}>\n//         {exercises?.map((ex) => (\n//           <Col xs={12} sm={12} md={12} lg={6} key={ex._id}>\n//             <img\n//               style={{ width: \"200px\", padding: \"10px\" }}\n//               src={ex.imageUrl}\n//               alt=\"\"\n//             />\n//             <Card title=\"Card title\">\n//               <Card\n//                 type=\"inner\"\n//                 title=\"Inner Card title\"\n//                 extra={<a href=\"#\">More</a>}\n//               >\n//                 Inner Card content\n//               </Card>\n//               <Card\n//                 style={{ marginTop: 16 }}\n//                 type=\"inner\"\n//                 title=\"Inner Card title\"\n//                 extra={<a href=\"#\">More</a>}\n//               >\n//                 Inner Card content\n//               </Card>\n//             </Card>\n//             {/* <Card>\n//             <p>{ex.name}</p>\n\n//             </Card> */}\n//           </Col>\n//         ))}\n//       </Row>\n//     </>\n//   )\n","import React, { useEffect, useState } from \"react\"\nimport { Row, Col, Card, Typography } from \"antd\"\nimport MY_SERVICE from \"../services\"\nimport { Link } from \"react-router-dom\"\n\nconst { Title } = Typography\n\nfunction Workouts() {\n  const [workouts, setWorkouts] = useState(null)\n\n  useEffect(() => {\n    async function getWorkoutsFunction() {\n      const { data: allWorkouts } = await MY_SERVICE.getWorkouts()\n      setWorkouts(allWorkouts)\n    }\n    getWorkoutsFunction()\n  }, [])\n\n  return (\n    <>\n      <Row className=\"custom-header\">\n        <Col span={24}>\n          <Title level={1}>\n            Checkout\n            <br />\n            <span>Our Workouts</span>\n          </Title>\n        </Col>\n      </Row>\n      <Row className=\"card-group\">\n        {workouts &&\n          workouts.map((elm) => (\n            <Col span={6} key={elm._id}>\n              <Link to={`/workouts/${elm._id}`}>\n                <Card key={elm._id}>\n                  <div>\n                    <img alt=\"example\" src=\"/exercise.jpg\" />\n                  </div>\n                  <div className=\"card-content\">\n                    <p className=\"card-title\">{elm.name}</p>\n                    <p className=\"card-text\">{elm.level}</p>\n                  </div>\n                </Card>\n              </Link>\n            </Col>\n          ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Workouts\n","import { useContextInfo } from \"../hooks/context\"\nimport MY_SERVICE from \"../services\"\nimport ReactPlayer from \"react-player\"\nimport \"./CreateWorkout.scss\"\nimport React, { useState, useEffect } from \"react\"\nimport {\n  Typography,\n  Row,\n  Col,\n  Skeleton,\n  Divider,\n  Input,\n  Card,\n  Form,\n  Button,\n  Select,\n  Modal\n} from \"antd\"\nimport { toast } from \"react-toastify\"\nconst { Search } = Input\n\nconst CreateWorkout = ({history}) => {\n  const { user } = useContextInfo()\n  // const history = useHistory()\n  const [exercises, setExercises] = useState([])\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [searchResults, setSearchResults] = useState([])\n  const [newData, setNewData] = useState(false)\n  const [exerciseArr, setExerciseArr] = useState([])\n  const [form] = Form.useForm()\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [modalVideoUrl, setModalVideoUrl] = useState(\"\")\n\n  useEffect(() => {\n    async function getData() {\n      toast.success(\n        \"Click on an exercise to see a preview of how to peform the movement correctly! \"\n      )\n      const { data } = await MY_SERVICE.getExercises()\n      setExercises(data)\n    }\n    getData()\n  }, [])\n\n  useEffect(() => {\n    const term = exercises\n      ? exercises.filter(\n          (ex) =>\n            ex.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            ex.muscle_group.toLowerCase().includes(searchQuery.toLowerCase())\n        )\n      : []\n    setSearchResults(term)\n  }, [searchQuery])\n\n  const onChange = (event) => {\n    setSearchQuery(event.target.value)\n    setNewData(true)\n  }\n\n  const addExercise = (item) => {\n    if (exerciseArr.includes(item) && exerciseArr.length < 6)\n      toast.error(\"Exercise already added, try a different one.\")\n    if (exerciseArr.length === 6)\n      toast.error(\"You can only add up to 6 exercises per workout.\")\n    if (exerciseArr.length < 6 && exerciseArr.includes(item) === false) {\n      setExerciseArr((exerciseArr) => [...exerciseArr, item])\n    }\n  }\n\n  const deleteHandle = (exercise) => {\n    let arr = []\n    arr = exerciseArr.filter((ex) => ex._id !== exercise._id)\n    setExerciseArr(arr)\n  }\n\n  const showModal = (url) => {\n    setModalVideoUrl(url)\n    setIsModalVisible(true)\n  }\n  const handleCancel = () => {\n    setIsModalVisible(false)\n  }\n  const handleOk = () => {\n    setIsModalVisible(false)\n  }\n  async function handleSubmit(userInputValues) {\n    if (exerciseArr.length === 6) {\n      MY_SERVICE.createWorkout({\n        exercises: exerciseArr,\n        name: userInputValues.name,\n        image: \"https://unsplash.com/photos/0Wra5YYVQJE\",\n        description: \"This is a custom workout\",\n        level: userInputValues.exercise,\n        round_rest: 20,\n        set_rest: 60,\n        repeat: 4,\n        sets: 2,\n        exercises_per_set: 3,\n        created_by: user._id,\n      })\n        .then((response) => {\n          setExerciseArr([])\n          history.push(\"/workouts\")\n        })\n        .catch((error) => {})\n    } else {\n      toast.error(\"Your workout needs to contain 6 exercises to be created\")\n    }\n  }\n  return (\n    <>\n      {isModalVisible ? (\n        <Modal\n          visible={isModalVisible}\n          title=\"How to perform the exercise\"\n          onCancel={handleCancel}\n          footer={[\n            <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\n              Okay\n            </Button>,\n          ]}\n        >\n          <ReactPlayer url={modalVideoUrl} width=\"100%\" height=\"260px\" />\n        </Modal>\n      ) : null}\n\n      <div id=\"create-workout\">\n        <div className=\"left\">\n          <Row>\n            <Typography.Title level={1}>\n              CREATE A <span>NEW WORKOUT</span>\n            </Typography.Title>\n          </Row>\n          <br />\n          <Row>\n            <Typography.Paragraph>\n              <p>\n                Start by clicking the + button of the exercise you want to add. You can type in the searchbar any exercise name or even a muscle group to start getting results\n                i.e., \"Lower Body\", \"Upper Body\", \"Tricep\", \"Leg\".\n                <br />\n                <br />\n                Don't forget to name your workout and select a difficulty level according to exercise selection.\n              </p>\n            </Typography.Paragraph>\n          </Row>\n          <br />\n          <br />\n          <br />\n          <p className=\"your-workout\">YOUR WORKOUT</p>\n          {/* <WorkoutForm exerciseArr={exerciseArr}></WorkoutForm> */}\n          <div className=\"workout-form\">\n            <div className=\"site-card-wrapper\">\n              <Row gutter={16}>\n                {exerciseArr.map((ex) => (\n                  <>\n                    <Col xs={24} sm={24} md={24} lg={24} key={ex._id}>\n                      <Card>\n                        <div className=\"text\">\n                          <span>\n                            <p>{ex.name}</p>\n                          </span>\n                          <p>{ex.muscle_group}</p>\n                        </div>\n                        <Button\n                          primary\n                          block\n                          size=\"middle\"\n                          onClick={() => deleteHandle(ex)}\n                        >\n                          <i className=\"fas fa-trash-alt\"></i>\n                        </Button>\n                      </Card>\n                    </Col>\n                  </>\n                ))}\n              </Row>\n            </div>\n          </div>\n          <>\n            <Col span={24}>\n              <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n                \n                <Form.Item\n                  rules={[{ required: true }]}\n                  name=\"name\"\n                  label=\"Name your workout\"\n                >\n                  <Input value=\"asd\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"exercise\"\n                  label=\"Select a difficulty level for your workout according to exercise selection\"\n                  rules={[{ required: true }]}\n                >\n                  <Select>\n                    <Select.Option value=\"Begginer\">Begginer</Select.Option>\n                    <Select.Option value=\"Intermediate\">\n                      Intermediate\n                    </Select.Option>\n                    <Select.Option value=\"Advanced\">Advanced</Select.Option>\n                  </Select>\n                </Form.Item>\n                <Button type=\"primary\" block size=\"middle\" htmlType=\"submit\">\n                  Create Wrokout\n                </Button>\n                <br />\n                <br />\n                <Button\n                  danger\n                  block\n                  size=\"middle\"\n                  onClick={() => {\n                    setExerciseArr([])\n                  }}\n                >\n                  Clear\n                </Button>\n              </Form>\n            </Col>\n          </>\n          <br />\n        </div>\n\n        <div className=\"right\">\n          <Search\n            value={searchQuery}\n            onChange={onChange}\n            placeholder=\"Browse specific exercies to add\"\n          />\n          <Divider />\n          {exercises.length === 0 && (\n            <>\n              <Skeleton></Skeleton>\n              <Skeleton></Skeleton>\n              <Skeleton></Skeleton>\n            </>\n          )}\n          <Row gutter={[16, 16]}>\n            {searchResults.length > 0 ? (\n              searchResults.map((item) => (\n                <>\n                  <Col xs={24} sm={24} md={24} lg={24} key={item._id}>\n                    <Card>\n                      <img\n                        onClick={() => showModal(item.videoUrl)}\n                        src={item.imageUrl}\n                        alt=\"\"\n                      />\n                      <div className=\"text\">\n                        <span>\n                          <p>{item.name}</p>\n                        </span>\n                        <p>{item.muscle_group}</p>\n                      </div>\n                      <Button\n                        primary\n                        block\n                        size=\"middle\"\n                        onClick={() => showModal(item.videoUrl)}\n                      >\n                        <i class=\"fas fa-play-circle\"></i>\n                      </Button>\n                      <br />\n                      <Button\n                        ghost\n                        block\n                        size=\"middle\"\n                        onClick={() => addExercise(item)}\n                      >\n                        <i className=\"fas fa-plus\"></i>\n                      </Button>\n                    </Card>\n                  </Col>\n                </>\n              ))\n            ) : (\n              <></>\n            )}\n          </Row>\n\n          <Row gutter={[16, 16]}>\n            {searchResults.length === 0 && newData === false ? (\n              exercises.map((item) => (\n                <>\n                  <Col xs={24} sm={24} md={24} lg={24} key={item._id}>\n                    <Card>\n                      <img\n                        onClick={() => showModal(item.videoUrl)}\n                        src={item.imageUrl}\n                        alt=\"\"\n                      />\n                      <div className=\"text\">\n                        <span>\n                          <p>{item.name}</p>\n                        </span>\n                        <p>{item.muscle_group}</p>\n                      </div>\n                      <Button\n                        primary\n                        block\n                        size=\"middle\"\n                        onClick={() => showModal(item.videoUrl)}\n                      >\n                        <i class=\"fas fa-play-circle\"></i>\n                      </Button>\n                      <br />\n                      <Button\n                        primary\n                        block\n                        size=\"middle\"\n                        onClick={() => addExercise(item)}\n                      >\n                        <i className=\"fas fa-plus\"></i>\n                      </Button>\n                    </Card>\n                  </Col>\n                </>\n              ))\n            ) : (\n              <></>\n            )}\n            {newData === true && searchResults.length === 0 ? (\n              <p>NO HAY RESULTADOS</p>\n            ) : (\n              <></>\n            )}\n          </Row>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CreateWorkout\n","import React, { useState, useEffect } from \"react\"\nimport { useContextInfo } from \"../hooks/context\"\nimport MY_SERVICE from \"../services\"\nimport { Typography, Row, Col, Input, Card } from \"antd\"\nimport \"./recipes.scss\"\nconst { Search } = Input\nconst { Title } = Typography\n\nconst Recipies = () => {\n  const { user } = useContextInfo()\n  const [recipes, setRecipes] = useState([])\n  const [search, setSearch] = useState(\"\")\n  const [query, setQuery] = useState(\"\")\n\n  useEffect(() => {\n    const getRecipesOnce = async () => {\n      const { data } = await MY_SERVICE.getRecipesChicken()\n      setRecipes(data.hits)\n    }\n    getRecipesOnce()\n  }, [])\n\n  useEffect(() => {\n    const getRecipies = async () => {\n      const { data } = await MY_SERVICE.getRecipes(query)\n      setRecipes(data.hits)\n    }\n    getRecipies()\n  }, [query])\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value)\n  }\n\n  const getSearch = (e) => {\n    setQuery(search)\n  }\n  return (\n    <>\n      {user ? (\n        <div id=\"recipes\">\n          <Row className=\"custom-header\">\n            <Col span={24}>\n              <Title level={1}>\n                Checkout\n                <br />\n                <span>Some healthy meals ideas</span>\n              </Title>\n              <div className=\"text-info\">\n                <Typography.Paragraph>\n                  <p>\n                    Nutrition and a proper diet are as crucial as your physical\n                    training, ensuring your body has enough fuel to run and\n                    recover is instrumental. Incorporating healthy dietary\n                    practices in your training will ensure your body has enough\n                    energy to keep going.\n                    <br />\n                    <br />\n                    Here we provide you some healthy foods for each of the 3\n                    macronutrients so you can get ideas of what to enter in the\n                    search bar.\n                    <br />\n                    🍗 <b>Protein:</b> low-fat milk, beans, green peas, lean\n                    beef, chicken, fish, eggs, cheese, yogurt, nuts, peanut\n                    butter, cottage cheese, tofu and soy products.\n                    <br />\n                    🥔 <b>Carbs:</b> potatoes, yams, beans, peas, wheat bread,\n                    bananas, macaroni, spaghetti, cereal, raisins, apples,\n                    bagels, syrup, brown rice, corn, apples, carrots, and root\n                    vegetables.\n                    <br />\n                    🥑 <b>Fats:</b> avocado, nuts, seeds, nut-butter, vegetable\n                    oil, and salmon.\n                  </p>\n                </Typography.Paragraph>\n              </div>\n              <Search\n                value={search}\n                onChange={updateSearch}\n                placeholder=\"Enter a food you love to see some healthy recipes\"\n                onSearch={getSearch}\n              />\n            </Col>\n          </Row>\n          <Row className=\"card-group\">\n            {recipes.map((recipe, i) => (\n              <div key={i}>\n                <Col xs={24} sm={24} md={24} lg={24}>\n                  <Card>\n                    <div className=\"card-left\">\n                      <p className=\"card-title\">{recipe.recipe.label}</p>\n                      <img alt=\"/recipe.jpg\" src={recipe.recipe.image} />\n                    </div>\n                    <div className=\"card-content\">\n                      <p className=\"card-text\">\n                        {\" \"}\n                        <b>Ingredients:</b>{\" \"}\n                        {recipe.recipe.ingredientLines.map((ingredient, i) => (\n                          <li key={i}>{ingredient}</li>\n                        ))}\n                      </p>\n                      <p>\n                        This meal is\n                        {recipe.recipe.healthLabels.map((healthLabel, i) => (\n                          <span key={i}> {healthLabel} </span>\n                        ))}\n                      </p>\n                      <p className=\"card-text\">\n                        <span key={recipe.recipe.calories}>\n                          {\" \"}\n                          <b>Calories: </b> {recipe.recipe.calories.toFixed(2)}\n                        </span>\n                      </p>\n                    </div>\n                  </Card>\n                </Col>\n              </div>\n            ))}\n          </Row>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  )\n}\n\nexport default Recipies\n","import React, {useEffect, useState} from 'react'\nimport MY_SERVICE from '../services'\nimport { List, Row, Col, Typography } from 'antd';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport ReactPlayer from \"react-player/lazy\"\nimport \"./WorkoutDisplay.scss\"\nconst { Title } = Typography;\n\nfunction DisplayWorkout({ match }) {\n\n  const listData = [];\n  let exercisesCounter = 0\n\n  const [workoutExc, setWorkoutExc] = useState([])\n  const [workout, setWorkout] = useState({})\n  const [videos, setVideos] = useState([])\n  const [count, setCount] = useState(0)\n  const [seconds, setSeconds] = useState(30);\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    async function getWorkout() {\n      const { data } = await MY_SERVICE.getWorkout(match.params.id)\n      console.log(data, \"📡\")\n      const videosCopy = data.exercises.map(elm => false)\n\n      setVideos(videosCopy)\n      setWorkout(data)\n\n      for(let i = 0; i < data.sets; i++) { \n        listData.push({\n          set: \"set\",\n        })\n        for (let j = 0; j < data.exercises_per_set; j++) {\n          listData.push({\n            exercise: data.exercises[exercisesCounter],\n            id: exercisesCounter\n          })\n          if(j !== data.exercises_per_set-1){\n            listData.push({\n              rest: data.round_rest,\n            })\n          }\n          exercisesCounter++\n        }\n        listData.push({\n          rest: data.set_rest,\n        })\n      }\n      setWorkoutExc(listData)\n      setCount(listData.length)\n    }\n\n    getWorkout()\n  }, [])\n\n  function handleVideo(id) {\n    const copy = [...videos]\n\n    if(copy[id]) {\n      copy[id] = false\n    } else {\n      copy[id] = true\n    }\n\n    setVideos(copy)\n  }\n\n  // //Timer\n  // function toggle() {\n  //   setIsActive(!isActive);\n  // }\n\n  // function reset() {\n  //   setSeconds(30);\n  //   setIsActive(false);\n  // }\n\n  // useEffect(() => {\n  //   let interval = null;\n  //   if (isActive) {\n  //     interval = setInterval(() => {\n  //       setSeconds(seconds => seconds - 1);\n  //     }, 1000);\n  //   } else if (isActive && seconds === 0) {\n  //     clearInterval(interval);\n  //   }\n  //   return () => clearInterval(interval);\n  // }, [isActive, seconds]);\n\n  return (\n    <div id=\"display-workout\">\n      <Row>\n        <Col span={24} className=\"hero\">\n          <div className=\"hero__content\">\n            <Title>{workout.name}</Title>\n            <div className=\"text-block\">\n              <p>\n              Level \n              <br/>\n              <span>{workout.level}</span>\n              </p>\n            </div>\n          </div>\n          <img className=\"hero-image\" src={workout.image}/>\n        </Col>\n      </Row>\n      <div className=\"display-workout__container\">\n      <div className=\"display-workout__content\">\n        <Row>\n          <Col span={24} className=\"display-workout__description\">\n          {workout.description}\n          </Col>\n\n          <div className=\"text-block\">\n            <p>Created By:</p>\n            <span>{workout.created_by}</span>\n          </div>\n        </Row>\n        <List className=\"display-workout__list\">\n        {workout && workoutExc.length == count ?\n        <>\n        {workoutExc.map((item, index) => \n          <List.Item key={index}>\n          {item.set ? \n          <div className=\"list-item-set\">\n            <p>{item.set} <span>Repeat {workout.repeat} times</span></p>\n          </div>\n          : item.exercise ?\n          <Row\n          onClick={() => handleVideo(item.id)}\n          className=\"list-item-exercise\"\n          >\n          <Col span={24}>\n            <Row>\n              <Col span={6}>\n                <img\n                  alt=\"Exercise\"\n                  src={item.exercise.imageUrl}\n                  style={{width: \"100%\", height: \"100%\"}}\n                />\n              </Col>\n              <Col span={17} className=\"list-item-exercise__content\">\n              <p className=\"time\">0:30</p>\n              <p>\n              {item.exercise.name}\n              <br/>\n              <span>{item.exercise.muscle_group}</span>\n              </p>\n              </Col>\n              <Col span={1} className=\"list-item-buttons\">\n                <PlayCircleOutlined />\n              </Col>\n            </Row>\n            {videos[item.id] ? \n            <Row>\n              <Col span={24} className=\"list-item-video\">\n                <ReactPlayer \n                url={item.exercise.videoUrl}\n                width=\"100%\"\n                />\n              </Col>\n            </Row>\n            : \n            <></>\n            }\n          </Col>\n          </Row>\n          :\n          <div className=\"list-item-recover\">\n            <p>0.{item.rest} <span>Recover</span></p>\n          </div>\n          }\n          </List.Item>\n        )}\n        </>\n        : \n        <p>loading</p>\n        }\n        </List>\n      </div>\n      </div>\n      {/* <Row className=\"timer\">\n      <Col span={18} className=\"timer__time\">\n        {seconds}s\n      </Col>\n      <Col span={3} className=\"timer__buttons\">\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button className=\"button\" onClick={reset}>\n          Reset\n        </button>\n      </Col>\n    </Row> */}\n    </div>\n  )\n}\n\nexport default DisplayWorkout","import React from \"react\"\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport Home from \"./pages/Home\"\nimport NotFound from \"./components/404/NotFound.js\"\nimport LayoutApp from \"./components/LayoutApp\"\nimport Signup from \"./pages/Signup\"\nimport Login from \"./pages/Login\"\nimport Dashboard from \"./pages/Dashboard\"\nimport NewUserInfoForm from \"./pages/NewUserInfoForm\"\nimport Exercises from \"./pages/Exercises\"\nimport Workouts from \"./pages/Workouts\"\nimport CreateWorkout from \"./pages/CreateWorkout\"\nimport Recipes from \"./pages/Recipes\"\nimport { useContextInfo } from \"./hooks/context\"\n// import MY_SERVICE from \"./services\"\nimport DisplayWorkout from \"./pages/WorkoutDisplay\"\n\nconst Router = () => {\n  // const { user } = useContextInfo()\n  // useEffect(() => {\n  //   //ver si estamos loggeados en el servr, si si,\n  //   //actualizamos el contexto con user, sino, logout del contexto.\n  //   console.log(\"useEff from router.\")\n  //   async function getUser() {\n  //     try {\n  //       const { user } = await MY_SERVICE.isAuth()\n  //       console.log(\"esta fue la respuesta del server.. ,\", user)\n  //       login(user)\n\n  //     } catch {}\n  //   }\n  //   getUser()\n  // }, [])\n    const { user } = useContextInfo()\n\n\n\n  return (\n    <BrowserRouter>\n      <LayoutApp>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/new-user-form\" component={NewUserInfoForm} />\n          {/* <Route path='/profile' component={Profile}/> */}\n          {user ? (\n            <>\n              <Route path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/workouts/:id\" component={DisplayWorkout} />\n              <Route path=\"/exercises\" component={Exercises} />\n              <Route exact path=\"/workouts\" component={Workouts} />\n              <Route path=\"/create-workout\" component={CreateWorkout} />\n              <Route path=\"/recipes\" component={Recipes} />\n            </>\n          ) : (\n            <Route component={Home} />\n          )}\n          <Route component={NotFound} />\n        </Switch>\n      </LayoutApp>\n    </BrowserRouter>\n  )\n}\n\nexport default Router\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Router from \"./Router\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { AppCtxProvider } from \"./hooks/context\"\nimport { ToastContainer, Slide } from 'react-toastify'\nimport \"antd/dist/antd.css\"\nimport 'react-toastify/dist/ReactToastify.css'\nimport \"./index.scss\"\n\nReactDOM.render(\n  <>\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={4500}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n      transition={Slide}\n    />\n    <AppCtxProvider>\n      <Router />\n    </AppCtxProvider>\n  </>,\n  document.getElementById(\"root\")\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}